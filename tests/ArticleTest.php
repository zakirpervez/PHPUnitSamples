<?php

use App\Article;
use PHPUnit\Framework\TestCase;

class ArticleTest extends TestCase
{
    protected Article $article;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->article = new Article();
    }

//    public function testTitleIsEmptyByDefault()
//    {
//        $this->assertEmpty($this->article->title);
//    }
//
//    public function testSlugIsEmptyWithNoTitle() {
//        $this->assertSame($this->article->getSlug(), "");
//    }
//
//    public function testSlugHasSpacesReplacedByUnderscore() {
//        $this->article->title = 'An example article';
//        $this->assertEquals('An_example_article', $this->article->getSlug());
//    }
//
//    public function testSlugHasWhiteSpacesReplacedBySingleUnderscore() {
//        $this->article->title = "An    example    \n  article";
//        $this->assertEquals('An_example_article', $this->article->getSlug());
//    }

    /**
     * @dataProvider dataProviderForTestSlug
     */
    public function testSlug(string $title, string $slug)
    {
        $this->article->title = $title;
        $this->assertEquals($slug, $this->article->getSlug());
    }

    private function dataProviderForTestSlug(): array
    {
        return [
            'empty title empty slug' => ['', ''],
            'slug has spaces replace them by underscore' => ['An example article', 'An_example_article'],
            'slug has white spaces replaced by single underscore' => ["An    example    \n  article", 'An_example_article'],
            'slug has white spaces and exclamation mark replaced by single underscore' => ["Read! This! Now!", 'Read_This_Now'],
        ];
    }
}
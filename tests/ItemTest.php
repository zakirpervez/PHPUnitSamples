<?php

use App\Item;
use App\ItemChild;
use PHPUnit\Framework\TestCase;

class ItemTest extends TestCase
{

    private Item $item;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->item = new Item();
    }

    public function testDescriptionIsNotEmpty() {
        $this->assertNotEmpty($this->item->getDescription());
    }

    public function testIdAnInteger() {
        $itemChild = new ItemChild();
        $this->assertIsInt($itemChild->getId());
    }

    /**
     * @throws ReflectionException
     */
    public function testGetTokenIsReturnString() {
        $item = new Item();
        $reflector = new ReflectionClass(Item::class);
        $method = $reflector->getMethod('getToken');
        $method->setAccessible(true);
        $result = $method->invoke($item);
        $this->assertIsString($result);
    }

    public function testGetTokenWithPrefix() {
        $item = new Item();
        $reflector = new ReflectionClass(Item::class);
        $method = $reflector->getMethod('getTokenWithPrefix');
        $method->setAccessible(true);
        $result = $method->invokeArgs($item, ['mzp']);
        $this->assertIsString($result);
    }
}